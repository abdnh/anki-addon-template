name: Run checks & tests

on:
    push:
        branches:
            - "master"
            - "main"
            - "test"
    pull_request:

jobs:
    get-versions:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  submodules: recursive
                  fetch-depth: 0

            - name: Install uv
              uses: astral-sh/setup-uv@v5

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version-file: ".python-version"

            - name: Get version matrix
              id: set-matrix
              run: |
                  MATRIX=$(uv run -m ankiscripts.versions)
                  echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

    build-and-check:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  submodules: recursive
                  fetch-depth: 0

            - name: Install uv
              uses: astral-sh/setup-uv@v5

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version-file: ".python-version"

            - name: Set up node
              uses: actions/setup-node@v5
              with:
                  node-version: 24

            - name: Install dependencies
              run: uv run -- python -m ankiscripts.install_ci_deps

            - name: Install just
              uses: extractions/setup-just@v3

            - name: Build
              run: just vendor && just ankiweb

            - name: Run checks
              run: uv run -- pre-commit run --all-files

            - name: Run TS tests
              run: just ts-test

    test:
        runs-on: ubuntu-latest
        needs: get-versions
        strategy:
            fail-fast: true
            matrix:
                include: ${{ fromJson(needs.get-versions.outputs.matrix) }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  submodules: recursive
                  fetch-depth: 0

            - name: Install uv
              uses: astral-sh/setup-uv@v5

            - name: Set up Python ${{ matrix.python }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python }}

            - name: Set up node
              uses: actions/setup-node@v5
              with:
                  node-version: 24

            - name: Install Anki ${{ matrix.anki }}
              run: uv add --dev aqt[qt,qt6]==${{ matrix.anki }}

            - name: Install dependencies
              run: uv run -- python -m ankiscripts.install_ci_deps
              env:
                  UV_PYTHON: ${{ matrix.python }}

            - name: Install just
              uses: extractions/setup-just@v3

            - name: Build
              run: just vendor && just ankiweb
              env:
                  UV_PYTHON: ${{ matrix.python }}

            - name: Run tests
              run: uv run python -m  pytest
              env:
                  UV_PYTHON: ${{ matrix.python }}
